[gd_scene load_steps=6 format=2]

[ext_resource path="res://Assets/ok_bt1.png" type="Texture" id=1]
[ext_resource path="res://Assets/enemyFlyingAlt_2.png" type="Texture" id=3]
[ext_resource path="res://Assets/enemyFlyingAlt_1.png" type="Texture" id=4]

[sub_resource type="GDScript" id=2]
script/source = "extends Control

onready var text1 = preload(\"res://Assets/ok_bt1.png\")
onready var text2 = preload(\"res://Assets/ok_bt2.jpg\")

var is_selected = false

func _ready():
	$Bkg/VBoxContainer/Panel/AnimatedSprite.play(\"default\")

func _on_TextureButton_pressed():
	if $Bkg/VBoxContainer/HBoxContainer/LineEdit.text and not is_selected:
		add_item()
		$Bkg/VBoxContainer/HBoxContainer/LineEdit.clear()
	elif is_selected:
		remove_selected_items()

func add_item():
	$Bkg/VBoxContainer/ItemList.add_item($Bkg/VBoxContainer/HBoxContainer/LineEdit.text, null, true)
	$Bkg/VBoxContainer/ItemList.set_item_metadata($Bkg/VBoxContainer/ItemList.get_item_count()-1,{\"active\": false})

func remove_selected_items():
	var it = $Bkg/VBoxContainer/ItemList.get_selected_items()[0]
	$Bkg/VBoxContainer/ItemList.remove_item(it)
	is_selected = false
	check_button()

func check_button():
	if is_selected:
		$Bkg/VBoxContainer/HBoxContainer/TextureButton.texture_normal = text2
	else:
		$Bkg/VBoxContainer/HBoxContainer/TextureButton.texture_normal = text1



func _on_LineEdit_text_entered(new_text):
	_on_TextureButton_pressed()


func _on_ItemList_item_selected(index):
	is_selected = true
	check_button()

func _on_LineEdit_text_changed(new_text):
	if $Bkg/VBoxContainer/ItemList.is_anything_selected():
		unselect_list()

func unselect_list():
	is_selected = false
	$Bkg/VBoxContainer/ItemList.unselect_all()
	check_button()


func _on_ItemList_nothing_selected():
	unselect_list()

func _on_ItemList_item_activated(index):
	if $Bkg/VBoxContainer/ItemList.get_item_metadata(index)[\"active\"] == false:
		$Bkg/VBoxContainer/ItemList.set_item_custom_bg_color(index, Color.darkgreen)
		$Bkg/VBoxContainer/ItemList.set_item_metadata(index, {\"active\": true})
	else:
		$Bkg/VBoxContainer/ItemList.set_item_custom_bg_color(index, Color(0,0,0,0))
		$Bkg/VBoxContainer/ItemList.set_item_metadata(index, {\"active\": false})
"

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 4 ), ExtResource( 3 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 2 )

[node name="Bkg" type="Panel" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="VBoxContainer" type="VBoxContainer" parent="Bkg"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 4.0
margin_bottom = 8.0
rect_min_size = Vector2( 400, 750 )

[node name="Panel" type="Panel" parent="Bkg/VBoxContainer"]
margin_right = 404.0
margin_bottom = 350.0
rect_min_size = Vector2( 400, 350 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="Bkg/VBoxContainer/Panel"]
position = Vector2( 200, 161 )
frames = SubResource( 1 )

[node name="Label" type="Label" parent="Bkg/VBoxContainer/Panel"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = 8.0
margin_top = 117.0
margin_right = -200.0
margin_bottom = 155.0
rect_scale = Vector2( 2, 2 )
text = "To Do"
valign = 1
autowrap = true

[node name="ItemList" type="ItemList" parent="Bkg/VBoxContainer"]
margin_top = 354.0
margin_right = 404.0
margin_bottom = 654.0
rect_min_size = Vector2( 400, 300 )

[node name="HBoxContainer" type="HBoxContainer" parent="Bkg/VBoxContainer"]
margin_top = 658.0
margin_right = 404.0
margin_bottom = 758.0
rect_min_size = Vector2( 400, 100 )

[node name="LineEdit" type="LineEdit" parent="Bkg/VBoxContainer/HBoxContainer"]
margin_right = 300.0
margin_bottom = 100.0
rect_min_size = Vector2( 300, 100 )

[node name="TextureButton" type="TextureButton" parent="Bkg/VBoxContainer/HBoxContainer"]
margin_left = 304.0
margin_right = 404.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
texture_normal = ExtResource( 1 )

[connection signal="item_activated" from="Bkg/VBoxContainer/ItemList" to="." method="_on_ItemList_item_activated"]
[connection signal="item_selected" from="Bkg/VBoxContainer/ItemList" to="." method="_on_ItemList_item_selected"]
[connection signal="nothing_selected" from="Bkg/VBoxContainer/ItemList" to="." method="_on_ItemList_nothing_selected"]
[connection signal="text_changed" from="Bkg/VBoxContainer/HBoxContainer/LineEdit" to="." method="_on_LineEdit_text_changed"]
[connection signal="text_entered" from="Bkg/VBoxContainer/HBoxContainer/LineEdit" to="." method="_on_LineEdit_text_entered"]
[connection signal="pressed" from="Bkg/VBoxContainer/HBoxContainer/TextureButton" to="." method="_on_TextureButton_pressed"]
